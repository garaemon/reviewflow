name: Auto Create PR

on:
  push:
    branches-ignore:
      - main
      - develop
  workflow_dispatch:
    inputs:
      base_branch:
        description: 'Base branch for PR'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - develop
      pr_title:
        description: 'PR title (optional, will use branch name if empty)'
        required: false
        type: string

jobs:
  auto-pr:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract branch name
      shell: bash
      run: |
        echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
    
    - name: Check if PR already exists
      id: check_pr
      run: |
        BASE_BRANCH="${{ github.event.inputs.base_branch || 'main' }}"
        EXISTING_PR=$(gh pr list --head "${{ env.BRANCH_NAME }}" --base "$BASE_BRANCH" --json number --jq '.[0].number // empty')
        echo "existing_pr=$EXISTING_PR" >> $GITHUB_OUTPUT
        echo "base_branch=$BASE_BRANCH" >> $GITHUB_OUTPUT
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Generate PR title and body
      id: pr_content
      run: |
        # Use custom title if provided, otherwise use branch name
        if [ -n "${{ github.event.inputs.pr_title }}" ]; then
          PR_TITLE="${{ github.event.inputs.pr_title }}"
        else
          # Convert branch name to readable title
          BRANCH_CLEAN=$(echo "${{ env.BRANCH_NAME }}" | sed 's/^[0-9]\{4\}\.[0-9]\{2\}\.[0-9]\{2\}-//' | sed 's/-/ /g' | sed 's/_/ /g')
          PR_TITLE="$(echo $BRANCH_CLEAN | sed 's/\b\w/\u&/g')"
        fi
        
        # Generate PR body with commit information
        PR_BODY="## Changes
        
        This PR was automatically created from branch \`${{ env.BRANCH_NAME }}\`.
        
        ## Commits
        $(git log --oneline ${{ steps.check_pr.outputs.base_branch }}..HEAD --pretty=format:'- %s (%h)')
        
        ## Testing
        - [ ] Tests pass
        - [ ] Linting passes
        - [ ] Manual testing completed
        
        ---
        *Auto-generated PR from commit ${{ env.SHORT_SHA }}*"
        
        echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT
        echo "pr_body<<EOF" >> $GITHUB_OUTPUT
        echo "$PR_BODY" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create Pull Request
      if: steps.check_pr.outputs.existing_pr == ''
      run: |
        gh pr create \
          --title "${{ steps.pr_content.outputs.pr_title }}" \
          --body "${{ steps.pr_content.outputs.pr_body }}" \
          --base "${{ steps.check_pr.outputs.base_branch }}" \
          --head "${{ env.BRANCH_NAME }}" \
          --label "auto-created"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update existing PR
      if: steps.check_pr.outputs.existing_pr != ''
      run: |
        echo "PR #${{ steps.check_pr.outputs.existing_pr }} already exists for this branch"
        gh pr edit ${{ steps.check_pr.outputs.existing_pr }} \
          --body "${{ steps.pr_content.outputs.pr_body }}"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}